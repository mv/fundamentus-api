# Uncomment this if your project is hosted on GitHub:
# github_url = https://github.com/<user or organization>/<project>/

[version]
current = "0.3.5"

# Example of a semver regexp.
regex = '''
  (?P<major>\d+)
  \.
  (?P<minor>\d+)
  \.
  (?P<patch>\d+)
  '''

[git]
message_template = "Bump to {new_version}"
tag_template = "v{new_version}"

# For each file to patch, add a [[file]] config section containing
# the path of the file, relative to the tbump.toml location.

# Skip: __init__.py is the source
# [[file]]
# src = "src/fundamentus/__init__.py"
# search = "__version__ = '{current_version}'"

# Skip: pyproject is now dynamic
# [[file]]
# src = "pyproject.toml"
#  search = '# version = "{current_version}"'

# New: placeholder
[[file]]
src = "README.md"
search = 'Release version {current_version}'


# You can specify a list of commands to
# run after the files have been patched
# and before the git commit is made

[[before_commit]]
name = "check changelog"
cmd = "grep -q {new_version} CHANGELOG.md"

# Or run some commands after the git tag and the branch
# have been pushed:
#[[after_push]]
#  name = "publish"
#  cmd = "./publish.sh"
